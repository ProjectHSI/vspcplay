# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: MXE Makefile

on:
  - push
  - workflow_dispatch
    

jobs:
  build:
    runs-on: "ubuntu-latest"

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          submodules: recursive

      - uses: actions/checkout@v4
        name: Checkout MXE
        with:
          repository: 'mxe/mxe'
          ref: 'build-2022-04-09'
          path: 'mxe'
          submodules: recursive

      - name: Install MXE Dependencies
        run: |        
          sudo apt-get install \
            autoconf \
            automake \
            autopoint \
            bash \
            bison \
            bzip2 \
            flex \
            g++ \
            g++-multilib \
            gettext \
            git \
            gperf \
            intltool \
            libc6-dev-i386 \
            libgdk-pixbuf2.0-dev \
            libltdl-dev \
            libgl-dev \
            libpcre3-dev \
            libssl-dev \
            libtool-bin \
            libxml-parser-perl \
            lzip \
            make \
            openssl \
            p7zip-full \
            patch \
            perl \
            python3 \
            python3-distutils \
            python3-mako \
            python3-packaging \
            python3-pkg-resources \
            python-is-python3 \
            ruby \
            sed \
            sqlite3 \
            unzip \
            wget \
            xz-utils

      - name: Build & Install MXE
        run: |
          cd mxe
          make --debug=bjmpw cc sdl2
          cd ..

      - name: Build
        run: make MXEBASE="mxe" -f Makefile.mxe

      - name: Get Commit Hash
        id: gitcommithash
        shell: bash
        run: |
          echo "git-commit-hash=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          name: mxe-${{ steps.gitcommithash.outputs.git-commit-hash }}
          path: |
              vspcplay.exe
          if-no-files-found: error
          retention-days: 0
